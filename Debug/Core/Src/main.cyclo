../Core/Inc/Json/Memory/Allocator.hpp:25:9:virtual void* ArduinoJson::V721HB22::detail::DefaultAllocator::allocate(size_t)	1
../Core/Inc/Json/Memory/Allocator.hpp:29:8:virtual void ArduinoJson::V721HB22::detail::DefaultAllocator::deallocate(void*)	1
../Core/Inc/Json/Memory/Allocator.hpp:33:9:virtual void* ArduinoJson::V721HB22::detail::DefaultAllocator::reallocate(void*, size_t)	1
../Core/Inc/Json/Memory/Allocator.hpp:37:21:static ArduinoJson::V721HB22::Allocator* ArduinoJson::V721HB22::detail::DefaultAllocator::instance()	1
../Core/Inc/Json/Memory/StringNode.hpp:30:27:static constexpr size_t ArduinoJson::V721HB22::detail::StringNode::sizeForLength(size_t)	1
../Core/Inc/Json/Memory/StringNode.hpp:34:22:static ArduinoJson::V721HB22::detail::StringNode* ArduinoJson::V721HB22::detail::StringNode::create(size_t, ArduinoJson::V721HB22::Allocator*)	4
../Core/Inc/Json/Memory/StringNode.hpp:64:15:static void ArduinoJson::V721HB22::detail::StringNode::destroy(ArduinoJson::V721HB22::detail::StringNode*, ArduinoJson::V721HB22::Allocator*)	1
../Core/Inc/Json/Strings/Adapters/RamString.hpp:24:3:ArduinoJson::V721HB22::detail::ZeroTerminatedRamString::ZeroTerminatedRamString(const char*)	1
../Core/Inc/Json/Strings/Adapters/RamString.hpp:26:8:bool ArduinoJson::V721HB22::detail::ZeroTerminatedRamString::isNull() const	1
../Core/Inc/Json/Strings/Adapters/RamString.hpp:34:8:char ArduinoJson::V721HB22::detail::ZeroTerminatedRamString::operator[](size_t) const	1
../Core/Inc/Json/Strings/Adapters/RamString.hpp:40:15:const char* ArduinoJson::V721HB22::detail::ZeroTerminatedRamString::data() const	1
../Core/Inc/Json/Strings/Adapters/RamString.hpp:72:3:ArduinoJson::V721HB22::detail::StaticStringAdapter::StaticStringAdapter(const char*)	1
../Core/Inc/Json/Strings/Adapters/RamString.hpp:74:8:bool ArduinoJson::V721HB22::detail::StaticStringAdapter::isLinked() const	1
../Core/Inc/Json/Strings/Adapters/RamString.hpp:83:24:static ArduinoJson::V721HB22::detail::StringAdapter<const char*, void>::AdaptedString ArduinoJson::V721HB22::detail::StringAdapter<const char*, void>::adapt(const char*)	1
../Core/Inc/Json/Strings/Adapters/RamString.hpp:92:3:ArduinoJson::V721HB22::detail::SizedRamString::SizedRamString(const char*, size_t)	1
../Core/Inc/Json/Strings/Adapters/RamString.hpp:98:10:size_t ArduinoJson::V721HB22::detail::SizedRamString::size() const	1
../Core/Inc/Json/Strings/Adapters/RamString.hpp:102:8:char ArduinoJson::V721HB22::detail::SizedRamString::operator[](size_t) const	1
C:\ST\STM32CubeIDE_1.17.0\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.12.3.rel1.win32_1.1.0.202410251130\tools\arm-none-eabi\include\c++\12.3.1\arm-none-eabi\thumb\v7e-m+fp\hard\bits\gthr-default.h:229:1:int __gthread_key_delete(__gthread_key_t)	1
../Core/Inc/Json/Strings/JsonString.hpp:19:3:ArduinoJson::V721HB22::JsonString::JsonString()	1
../Core/Inc/Json/Strings/JsonString.hpp:21:3:ArduinoJson::V721HB22::JsonString::JsonString(const char*, Ownership)	2
../Core/Inc/Json/Strings/JsonString.hpp:24:3:ArduinoJson::V721HB22::JsonString::JsonString(const char*, size_t, Ownership)	1
../Core/Inc/Json/Strings/JsonString.hpp:28:15:const char* ArduinoJson::V721HB22::JsonString::c_str() const	1
../Core/Inc/Json/Strings/JsonString.hpp:39:8:bool ArduinoJson::V721HB22::JsonString::isLinked() const	1
../Core/Inc/Json/Strings/JsonString.hpp:44:10:size_t ArduinoJson::V721HB22::JsonString::size() const	1
../Core/Inc/Json/Strings/Adapters/JsonString.hpp:15:3:ArduinoJson::V721HB22::detail::JsonStringAdapter::JsonStringAdapter(const ArduinoJson::V721HB22::JsonString&)	1
../Core/Inc/Json/Strings/Adapters/JsonString.hpp:30:24:static ArduinoJson::V721HB22::detail::StringAdapter<ArduinoJson::V721HB22::JsonString>::AdaptedString ArduinoJson::V721HB22::detail::StringAdapter<ArduinoJson::V721HB22::JsonString>::adapt(const ArduinoJson::V721HB22::JsonString&)	1
../Core/Inc/Json/Memory/StringPool.hpp:21:3:ArduinoJson::V721HB22::detail::StringPool::~StringPool()	1
../Core/Inc/Json/Memory/StringPool.hpp:29:8:void ArduinoJson::V721HB22::detail::StringPool::clear(ArduinoJson::V721HB22::Allocator*)	2
../Core/Inc/Json/Memory/StringPool.hpp:66:8:void ArduinoJson::V721HB22::detail::StringPool::add(ArduinoJson::V721HB22::detail::StringNode*)	1
../Core/Inc/Json/Memory/StringPool.hpp:81:8:void ArduinoJson::V721HB22::detail::StringPool::dereference(const char*, ArduinoJson::V721HB22::Allocator*)	5
../Core/Inc/Json/Collection/CollectionData.hpp:21:3:ArduinoJson::V721HB22::detail::CollectionIterator::CollectionIterator()	1
../Core/Inc/Json/Collection/CollectionData.hpp:25:8:bool ArduinoJson::V721HB22::detail::CollectionIterator::done() const	1
../Core/Inc/Json/Collection/CollectionData.hpp:37:16:ArduinoJson::V721HB22::detail::VariantData* ArduinoJson::V721HB22::detail::CollectionIterator::operator->()	1
../Core/Inc/Json/Collection/CollectionData.hpp:52:16:ArduinoJson::V721HB22::detail::VariantData* ArduinoJson::V721HB22::detail::CollectionIterator::data()	1
../Core/Inc/Json/Collection/CollectionData.hpp:73:16:static void* ArduinoJson::V721HB22::detail::CollectionData::operator new(size_t, void*)	1
../Core/Inc/Json/Variant/VariantContent.hpp:45:13:bool ArduinoJson::V721HB22::detail::operator&(VariantType, VariantTypeBits)	1
../Core/Inc/Json/Variant/VariantContent.hpp:50:3:ArduinoJson::V721HB22::detail::VariantContent::VariantContent()	1
../Core/Inc/Json/Variant/VariantData.hpp:27:16:static void* ArduinoJson::V721HB22::detail::VariantData::operator new(size_t, void*)	1
../Core/Inc/Json/Variant/VariantData.hpp:33:3:ArduinoJson::V721HB22::detail::VariantData::VariantData()	1
../Core/Inc/Json/Variant/VariantData.hpp:35:10:ArduinoJson::V721HB22::detail::SlotId ArduinoJson::V721HB22::detail::VariantData::next() const	1
../Core/Inc/Json/Variant/VariantData.hpp:39:8:void ArduinoJson::V721HB22::detail::VariantData::setNext(ArduinoJson::V721HB22::detail::SlotId)	1
../Core/Inc/Json/Variant/VariantData.hpp:174:19:ArduinoJson::V721HB22::detail::CollectionData* ArduinoJson::V721HB22::detail::VariantData::asCollection()	2
../Core/Inc/Json/Variant/VariantData.hpp:253:15:ArduinoJson::V721HB22::detail::ObjectData* ArduinoJson::V721HB22::detail::VariantData::asObject()	2
../Core/Inc/Json/Variant/VariantData.hpp:257:21:const ArduinoJson::V721HB22::detail::ObjectData* ArduinoJson::V721HB22::detail::VariantData::asObject() const	1
../Core/Inc/Json/Variant/VariantData.hpp:271:14:ArduinoJson::V721HB22::JsonString ArduinoJson::V721HB22::detail::VariantData::asString() const	3
../Core/Inc/Json/Variant/VariantData.hpp:336:8:bool ArduinoJson::V721HB22::detail::VariantData::isCollection() const	1
../Core/Inc/Json/Variant/VariantData.hpp:371:8:bool ArduinoJson::V721HB22::detail::VariantData::isNull() const	1
../Core/Inc/Json/Variant/VariantData.hpp:381:8:bool ArduinoJson::V721HB22::detail::VariantData::isObject() const	1
../Core/Inc/Json/Variant/VariantData.hpp:494:8:void ArduinoJson::V721HB22::detail::VariantData::setLinkedString(const char*)	1
../Core/Inc/Json/Variant/VariantData.hpp:501:8:void ArduinoJson::V721HB22::detail::VariantData::setOwnedString(ArduinoJson::V721HB22::detail::StringNode*)	1
../Core/Inc/Json/Collection/CollectionData.hpp:67:7:constexpr ArduinoJson::V721HB22::detail::CollectionData::CollectionData()	1
../Core/Inc/Json/Object/ObjectData.hpp:11:7:constexpr ArduinoJson::V721HB22::detail::ObjectData::ObjectData()	1
../Core/Inc/Json/Variant/VariantData.hpp:536:15:ArduinoJson::V721HB22::detail::ObjectData& ArduinoJson::V721HB22::detail::VariantData::toObject()	2
../Core/Inc/Json/Memory/StringPool.hpp:17:3:constexpr ArduinoJson::V721HB22::detail::StringPool::StringPool()	1
../Core/Inc/Json/Memory/MemoryPoolList.hpp:27:3:ArduinoJson::V721HB22::detail::MemoryPoolList<T>::MemoryPoolList() [with T = ArduinoJson::V721HB22::detail::ResourceManager::SlotData]	1
../Core/Inc/Json/Memory/ResourceManager.hpp:31:3:ArduinoJson::V721HB22::detail::ResourceManager::ResourceManager(ArduinoJson::V721HB22::Allocator*)	1
../Core/Inc/Json/Memory/ResourceManager.hpp:34:3:ArduinoJson::V721HB22::detail::ResourceManager::~ResourceManager()	1
../Core/Inc/Json/Memory/ResourceManager.hpp:110:8:void ArduinoJson::V721HB22::detail::ResourceManager::dereferenceString(const char*)	1
../Core/Inc/Json/Variant/JsonVariantConst.hpp:41:12:ArduinoJson::V721HB22::JsonVariantConst::JsonVariantConst(const ArduinoJson::V721HB22::detail::VariantData*, const ArduinoJson::V721HB22::detail::ResourceManager*)	1
../Core/Inc/Json/Variant/JsonVariantConst.hpp:178:30:const ArduinoJson::V721HB22::detail::VariantData* ArduinoJson::V721HB22::JsonVariantConst::getData() const	1
../Core/Inc/Json/Variant/JsonVariantConst.hpp:182:34:const ArduinoJson::V721HB22::detail::ResourceManager* ArduinoJson::V721HB22::JsonVariantConst::getResourceManager() const	1
../Core/Inc/Json/Variant/JsonVariant.hpp:22:3:ArduinoJson::V721HB22::JsonVariant::JsonVariant(ArduinoJson::V721HB22::detail::VariantData*, ArduinoJson::V721HB22::detail::ResourceManager*)	1
../Core/Inc/Json/Variant/JsonVariant.hpp:26:28:ArduinoJson::V721HB22::detail::ResourceManager* ArduinoJson::V721HB22::JsonVariant::getResourceManager() const	1
../Core/Inc/Json/Variant/JsonVariant.hpp:30:24:ArduinoJson::V721HB22::detail::VariantData* ArduinoJson::V721HB22::JsonVariant::getData() const	1
../Core/Inc/Json/Document/JsonDocument.hpp:24:12:ArduinoJson::V721HB22::JsonDocument::JsonDocument(ArduinoJson::V721HB22::Allocator*)	1
../Core/Inc/Json/Document/JsonDocument.hpp:20:7:ArduinoJson::V721HB22::JsonDocument::~JsonDocument()	1
../Core/Inc/Json/Document/JsonDocument.hpp:389:28:ArduinoJson::V721HB22::detail::ResourceManager* ArduinoJson::V721HB22::JsonDocument::getResourceManager()	1
../Core/Inc/Json/Document/JsonDocument.hpp:393:24:ArduinoJson::V721HB22::detail::VariantData* ArduinoJson::V721HB22::JsonDocument::getData()	1
../Core/Inc/Json/Document/JsonDocument.hpp:401:24:ArduinoJson::V721HB22::detail::VariantData* ArduinoJson::V721HB22::JsonDocument::getOrCreateData()	1
../Core/Inc/Json/Collection/CollectionImpl.hpp:15:8:ArduinoJson::V721HB22::detail::CollectionIterator::CollectionIterator(ArduinoJson::V721HB22::detail::VariantData*, ArduinoJson::V721HB22::detail::SlotId)	2
../Core/Inc/Json/Collection/CollectionImpl.hpp:20:13:void ArduinoJson::V721HB22::detail::CollectionIterator::next(const ArduinoJson::V721HB22::detail::ResourceManager*)	2
../Core/Inc/Json/Collection/CollectionImpl.hpp:28:33:ArduinoJson::V721HB22::detail::CollectionData::iterator ArduinoJson::V721HB22::detail::CollectionData::createIterator(const ArduinoJson::V721HB22::detail::ResourceManager*) const	1
../Core/Inc/Json/Collection/CollectionImpl.hpp:45:13:void ArduinoJson::V721HB22::detail::CollectionData::appendPair(ArduinoJson::V721HB22::detail::Slot<ArduinoJson::V721HB22::detail::VariantData>, ArduinoJson::V721HB22::detail::Slot<ArduinoJson::V721HB22::detail::VariantData>, const ArduinoJson::V721HB22::detail::ResourceManager*)	2
../Core/Inc/Json/Collection/CollectionImpl.hpp:60:13:void ArduinoJson::V721HB22::detail::CollectionData::clear(ArduinoJson::V721HB22::detail::ResourceManager*)	2
../Core/Inc/Json/Memory/ResourceManagerImpl.hpp:14:26:ArduinoJson::V721HB22::detail::Slot<ArduinoJson::V721HB22::detail::VariantData> ArduinoJson::V721HB22::detail::ResourceManager::allocVariant()	3
../Core/Inc/Json/Memory/ResourceManagerImpl.hpp:23:13:void ArduinoJson::V721HB22::detail::ResourceManager::freeVariant(ArduinoJson::V721HB22::detail::Slot<ArduinoJson::V721HB22::detail::VariantData>)	1
../Core/Inc/Json/Memory/ResourceManagerImpl.hpp:28:21:ArduinoJson::V721HB22::detail::VariantData* ArduinoJson::V721HB22::detail::ResourceManager::getVariant(ArduinoJson::V721HB22::detail::SlotId) const	1
../Core/Inc/Json/Memory/ResourceManagerImpl.hpp:33:31:ArduinoJson::V721HB22::detail::Slot<ArduinoJson::V721HB22::detail::VariantExtension> ArduinoJson::V721HB22::detail::ResourceManager::allocExtension()	2
../Core/Inc/Json/Memory/ResourceManagerImpl.hpp:42:13:void ArduinoJson::V721HB22::detail::ResourceManager::freeExtension(ArduinoJson::V721HB22::detail::SlotId)	1
../Core/Inc/Json/Memory/ResourceManagerImpl.hpp:47:26:ArduinoJson::V721HB22::detail::VariantExtension* ArduinoJson::V721HB22::detail::ResourceManager::getExtension(ArduinoJson::V721HB22::detail::SlotId) const	1
../Core/Inc/Json/Variant/VariantImpl.hpp:43:13:void ArduinoJson::V721HB22::detail::VariantData::clear(ArduinoJson::V721HB22::detail::ResourceManager*)	4
../Core/Inc/Json/Variant/VariantImpl.hpp:60:32:const ArduinoJson::V721HB22::detail::VariantExtension* ArduinoJson::V721HB22::detail::VariantData::getExtension(const ArduinoJson::V721HB22::detail::ResourceManager*) const	2
../Core/Inc/Json/Polyfills/ctype.hpp:12:13:bool ArduinoJson::V721HB22::detail::isdigit(char)	3
../Core/Inc/Json/Numbers/parseNumber.hpp:31:3:ArduinoJson::V721HB22::detail::NumberValue::NumberValue()	1
../Core/Inc/Json/Numbers/parseNumber.hpp:32:3:ArduinoJson::V721HB22::detail::NumberValue::NumberValue(float)	1
../Core/Inc/Json/Numbers/parseNumber.hpp:33:3:ArduinoJson::V721HB22::detail::NumberValue::NumberValue(ArduinoJson::V721HB22::JsonInteger)	1
../Core/Inc/Json/Numbers/parseNumber.hpp:34:3:ArduinoJson::V721HB22::detail::NumberValue::NumberValue(ArduinoJson::V721HB22::JsonUInt)	1
../Core/Inc/Json/Numbers/parseNumber.hpp:36:3:ArduinoJson::V721HB22::detail::NumberValue::NumberValue(double)	1
../Core/Inc/Json/Numbers/parseNumber.hpp:52:3:ArduinoJson::V721HB22::detail::Number::Number()	1
../Core/Inc/Json/Numbers/parseNumber.hpp:53:3:ArduinoJson::V721HB22::detail::Number::Number(float)	1
../Core/Inc/Json/Numbers/parseNumber.hpp:54:3:ArduinoJson::V721HB22::detail::Number::Number(ArduinoJson::V721HB22::JsonInteger)	1
../Core/Inc/Json/Numbers/parseNumber.hpp:55:3:ArduinoJson::V721HB22::detail::Number::Number(ArduinoJson::V721HB22::JsonUInt)	1
../Core/Inc/Json/Numbers/parseNumber.hpp:57:3:ArduinoJson::V721HB22::detail::Number::Number(double)	1
../Core/Inc/Json/Numbers/parseNumber.hpp:105:15:ArduinoJson::V721HB22::detail::Number ArduinoJson::V721HB22::detail::parseNumber(const char*)	34
../Core/Src/main.cpp:77:5:int main()	1
../Core/Src/main.cpp:156:6:void SystemClock_Config()	3
../Core/Src/main.cpp:199:13:void MX_GPIO_Init()	1
../Core/Src/main.cpp:267:6:void StartDefaultTask(void*)	2
../Core/Src/main.cpp:308:6:void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef*)	2
../Core/Src/main.cpp:324:6:void Error_Handler()	1
../Core/Inc/Json/Memory/MemoryPoolList.hpp:29:3:ArduinoJson::V721HB22::detail::MemoryPoolList<T>::~MemoryPoolList() [with T = ArduinoJson::V721HB22::detail::ResourceManager::SlotData]	1
../Core/Inc/Json/Memory/MemoryPoolList.hpp:116:8:void ArduinoJson::V721HB22::detail::MemoryPoolList<T>::clear(ArduinoJson::V721HB22::Allocator*) [with T = ArduinoJson::V721HB22::detail::ResourceManager::SlotData]	3
../Core/Inc/Json/Variant/VariantAttorney.hpp:25:15:getData()) ArduinoJson::V721HB22::detail::VariantAttorney::getData(TClient&) [with TClient = ArduinoJson::V721HB22::JsonVariant]	1
../Core/Inc/Json/Variant/VariantAttorney.hpp:25:15:getData()) ArduinoJson::V721HB22::detail::VariantAttorney::getData(TClient&) [with TClient = ArduinoJson::V721HB22::JsonVariantConst]	1
../Core/Inc/Json/Variant/VariantAttorney.hpp:19:15:getResourceManager()) ArduinoJson::V721HB22::detail::VariantAttorney::getResourceManager(TClient&) [with TClient = ArduinoJson::V721HB22::JsonVariantConst]	1
../Core/Inc/Json/Memory/MemoryPool.hpp:25:12:ArduinoJson::V721HB22::detail::Slot<T>::operator bool() const [with T = ArduinoJson::V721HB22::detail::VariantData]	1
../Core/Inc/Json/Memory/MemoryPool.hpp:33:6:T* ArduinoJson::V721HB22::detail::Slot<T>::ptr() const [with T = ArduinoJson::V721HB22::detail::VariantData]	1
../Core/Inc/Json/Memory/MemoryPool.hpp:29:10:ArduinoJson::V721HB22::detail::SlotId ArduinoJson::V721HB22::detail::Slot<T>::id() const [with T = ArduinoJson::V721HB22::detail::VariantData]	1
../Core/Inc/Json/Memory/MemoryPool.hpp:37:6:T* ArduinoJson::V721HB22::detail::Slot<T>::operator->() const [with T = ArduinoJson::V721HB22::detail::VariantData]	1
../Core/Inc/Json/Memory/MemoryPool.hpp:21:3:ArduinoJson::V721HB22::detail::Slot<T>::Slot(T*, ArduinoJson::V721HB22::detail::SlotId) [with T = ArduinoJson::V721HB22::detail::VariantData]	1
../Core/Inc/Json/Memory/MemoryPool.hpp:20:3:ArduinoJson::V721HB22::detail::Slot<T>::Slot() [with T = ArduinoJson::V721HB22::detail::VariantData]	1
../Core/Inc/Json/Memory/MemoryPoolList.hpp:81:11:ArduinoJson::V721HB22::detail::Slot<T> ArduinoJson::V721HB22::detail::MemoryPoolList<T>::allocSlot(ArduinoJson::V721HB22::Allocator*) [with T = ArduinoJson::V721HB22::detail::ResourceManager::SlotData]	5
../Core/Inc/Json/Memory/MemoryPool.hpp:25:12:ArduinoJson::V721HB22::detail::Slot<T>::operator bool() const [with T = ArduinoJson::V721HB22::detail::ResourceManager::SlotData]	1
../Core/Inc/Json/Memory/MemoryPool.hpp:37:6:T* ArduinoJson::V721HB22::detail::Slot<T>::operator->() const [with T = ArduinoJson::V721HB22::detail::ResourceManager::SlotData]	1
../Core/Inc/Json/Memory/MemoryPool.hpp:29:10:ArduinoJson::V721HB22::detail::SlotId ArduinoJson::V721HB22::detail::Slot<T>::id() const [with T = ArduinoJson::V721HB22::detail::ResourceManager::SlotData]	1
../Core/Inc/Json/Polyfills/alias_cast.hpp:24:3:T ArduinoJson::V721HB22::detail::alias_cast(F) [with T = ResourceManager::SlotData*; F = VariantData*]	1
../Core/Inc/Json/Memory/MemoryPool.hpp:21:3:ArduinoJson::V721HB22::detail::Slot<T>::Slot(T*, ArduinoJson::V721HB22::detail::SlotId) [with T = ArduinoJson::V721HB22::detail::ResourceManager::SlotData]	1
../Core/Inc/Json/Memory/MemoryPoolList.hpp:102:8:void ArduinoJson::V721HB22::detail::MemoryPoolList<T>::freeSlot(ArduinoJson::V721HB22::detail::Slot<T>) [with T = ArduinoJson::V721HB22::detail::ResourceManager::SlotData]	1
../Core/Inc/Json/Memory/MemoryPoolList.hpp:107:6:T* ArduinoJson::V721HB22::detail::MemoryPoolList<T>::getSlot(ArduinoJson::V721HB22::detail::SlotId) const [with T = ArduinoJson::V721HB22::detail::ResourceManager::SlotData]	2
../Core/Inc/Json/Memory/MemoryPool.hpp:20:3:ArduinoJson::V721HB22::detail::Slot<T>::Slot() [with T = ArduinoJson::V721HB22::detail::VariantExtension]	1
../Core/Inc/Json/Memory/MemoryPool.hpp:21:3:ArduinoJson::V721HB22::detail::Slot<T>::Slot(T*, ArduinoJson::V721HB22::detail::SlotId) [with T = ArduinoJson::V721HB22::detail::VariantExtension]	1
../Core/Inc/Json/Strings/StringAdapter.hpp:26:52:typename ArduinoJson::V721HB22::detail::SizedStringAdapter<TChar*>::AdaptedString ArduinoJson::V721HB22::detail::adaptString(TChar*, size_t) [with TChar = char]	1
../Core/Inc/Json/Variant/VariantAttorney.hpp:19:15:getResourceManager()) ArduinoJson::V721HB22::detail::VariantAttorney::getResourceManager(TClient&) [with TClient = ArduinoJson::V721HB22::JsonVariant]	1
../Core/Inc/Json/Strings/StringAdapter.hpp:21:47:typename ArduinoJson::V721HB22::detail::StringAdapter<TChar*>::AdaptedString ArduinoJson::V721HB22::detail::adaptString(TChar*) [with TChar = const char]	1
../Core/Inc/Json/Strings/StringAdapter.hpp:16:48:typename ArduinoJson::V721HB22::detail::StringAdapter<TString>::AdaptedString ArduinoJson::V721HB22::detail::adaptString(const TString&) [with TString = ArduinoJson::V721HB22::JsonString]	1
../Core/Inc/Json/Numbers/FloatTraits.hpp:70:12:static T ArduinoJson::V721HB22::detail::FloatTraits<T, 8>::inf() [with T = double]	1
../Core/Inc/Json/Numbers/FloatTraits.hpp:196:15:TFloat ArduinoJson::V721HB22::detail::make_float(TFloat, TExponent) [with TFloat = double; TExponent = int]	5
../Core/Inc/Json/Numbers/FloatTraits.hpp:196:15:TFloat ArduinoJson::V721HB22::detail::make_float(TFloat, TExponent) [with TFloat = float; TExponent = int]	5
../Core/Inc/Json/Document/JsonDocument.hpp:200:3:ArduinoJson::V721HB22::detail::enable_if_t<ArduinoJson::V721HB22::detail::IsString<TChar*>::value, ArduinoJson::V721HB22::detail::MemberProxy<ArduinoJson::V721HB22::JsonDocument&, TChar*> > ArduinoJson::V721HB22::JsonDocument::operator[](TChar*) [with TChar = const char]	1
../Core/Inc/Json/Object/MemberProxy.hpp:32:16:ArduinoJson::V721HB22::detail::MemberProxy< <template-parameter-1-1>, <template-parameter-1-2> >& ArduinoJson::V721HB22::detail::MemberProxy< <template-parameter-1-1>, <template-parameter-1-2> >::operator=(const T&) [with T = int; TUpstream = ArduinoJson::V721HB22::JsonDocument&; TStringRef = const char*]	1
../Core/Inc/Json/Variant/VariantRefBaseImpl.hpp:20:10:T ArduinoJson::V721HB22::detail::VariantRefBase<TDerived>::as() const [with T = int; TDerived = ArduinoJson::V721HB22::detail::MemberProxy<ArduinoJson::V721HB22::JsonDocument&, const char*>]	1
../Core/Inc/Json/Memory/MemoryPool.hpp:57:8:void ArduinoJson::V721HB22::detail::MemoryPool<T>::destroy(ArduinoJson::V721HB22::Allocator*) [with T = ArduinoJson::V721HB22::detail::ResourceManager::SlotData]	2
../Core/Inc/Json/Memory/MemoryPool.hpp:100:17:static size_t ArduinoJson::V721HB22::detail::MemoryPool<T>::slotsToBytes(ArduinoJson::V721HB22::detail::SlotCount) [with T = ArduinoJson::V721HB22::detail::ResourceManager::SlotData]	1
../Core/Inc/Json/Memory/MemoryPoolList.hpp:151:11:ArduinoJson::V721HB22::detail::Slot<T> ArduinoJson::V721HB22::detail::MemoryPoolList<T>::allocFromFreeList() [with T = ArduinoJson::V721HB22::detail::ResourceManager::SlotData]	1
../Core/Inc/Json/Memory/MemoryPoolList.hpp:159:11:ArduinoJson::V721HB22::detail::Slot<T> ArduinoJson::V721HB22::detail::MemoryPoolList<T>::allocFromLastPool() [with T = ArduinoJson::V721HB22::detail::ResourceManager::SlotData]	2
../Core/Inc/Json/Memory/MemoryPoolList.hpp:169:9:ArduinoJson::V721HB22::detail::MemoryPoolList<T>::Pool* ArduinoJson::V721HB22::detail::MemoryPoolList<T>::addPool(ArduinoJson::V721HB22::Allocator*) [with T = ArduinoJson::V721HB22::detail::ResourceManager::SlotData]	5
../Core/Inc/Json/Memory/MemoryPool.hpp:20:3:ArduinoJson::V721HB22::detail::Slot<T>::Slot() [with T = ArduinoJson::V721HB22::detail::ResourceManager::SlotData]	1
../Core/Inc/Json/Memory/MemoryPool.hpp:33:6:T* ArduinoJson::V721HB22::detail::Slot<T>::ptr() const [with T = ArduinoJson::V721HB22::detail::ResourceManager::SlotData]	1
../Core/Inc/Json/Memory/MemoryPool.hpp:74:6:T* ArduinoJson::V721HB22::detail::MemoryPool<T>::getSlot(ArduinoJson::V721HB22::detail::SlotId) const [with T = ArduinoJson::V721HB22::detail::ResourceManager::SlotData]	1
../Core/Inc/Json/Numbers/FloatTraits.hpp:32:21:static ArduinoJson::V721HB22::detail::pgm_ptr<T> ArduinoJson::V721HB22::detail::FloatTraits<T, 8>::positiveBinaryPowersOfTen() [with T = double]	1
../Core/Inc/Json/Polyfills/pgmspace_generic.hpp:59:5:T ArduinoJson::V721HB22::detail::pgm_ptr<T>::operator[](intptr_t) const [with T = double]	1
../Core/Inc/Json/Numbers/FloatTraits.hpp:49:21:static ArduinoJson::V721HB22::detail::pgm_ptr<T> ArduinoJson::V721HB22::detail::FloatTraits<T, 8>::negativeBinaryPowersOfTen() [with T = double]	1
../Core/Inc/Json/Strings/Adapters/RamString.hpp:125:24:static ArduinoJson::V721HB22::detail::SizedStringAdapter<TChar*, typename ArduinoJson::V721HB22::detail::enable_if<ArduinoJson::V721HB22::detail::IsChar<T>::value, void>::type>::AdaptedString ArduinoJson::V721HB22::detail::SizedStringAdapter<TChar*, typename ArduinoJson::V721HB22::detail::enable_if<ArduinoJson::V721HB22::detail::IsChar<T>::value, void>::type>::adapt(const TChar*, size_t) [with TChar = char]	1
../Core/Inc/Json/Variant/VariantImpl.hpp:22:13:bool ArduinoJson::V721HB22::detail::VariantData::setString(TAdaptedString, ArduinoJson::V721HB22::detail::ResourceManager*) [with TAdaptedString = ArduinoJson::V721HB22::detail::StaticStringAdapter]	4
../Core/Inc/Json/Numbers/FloatTraits.hpp:101:12:static T ArduinoJson::V721HB22::detail::FloatTraits<T, 8>::forge(uint64_t) [with T = double]	1
../Core/Inc/Json/Numbers/FloatTraits.hpp:116:21:static ArduinoJson::V721HB22::detail::pgm_ptr<T> ArduinoJson::V721HB22::detail::FloatTraits<T, 4>::positiveBinaryPowersOfTen() [with T = float]	1
../Core/Inc/Json/Numbers/FloatTraits.hpp:129:21:static ArduinoJson::V721HB22::detail::pgm_ptr<T> ArduinoJson::V721HB22::detail::FloatTraits<T, 4>::negativeBinaryPowersOfTen() [with T = float]	1
../Core/Inc/Json/Polyfills/pgmspace_generic.hpp:59:5:T ArduinoJson::V721HB22::detail::pgm_ptr<T>::operator[](intptr_t) const [with T = float]	1
../Core/Inc/Json/Object/MemberProxy.hpp:20:3:ArduinoJson::V721HB22::detail::MemberProxy< <template-parameter-1-1>, <template-parameter-1-2> >::MemberProxy(TUpstream, TStringRef) [with TUpstream = ArduinoJson::V721HB22::JsonDocument&; TStringRef = const char*]	1
../Core/Inc/Json/Variant/VariantRefBase.hpp:79:8:bool ArduinoJson::V721HB22::detail::VariantRefBase<TDerived>::set(const T&) const [with T = int; TDerived = ArduinoJson::V721HB22::detail::MemberProxy<ArduinoJson::V721HB22::JsonDocument&, const char*>]	1
../Core/Inc/Json/Variant/ConverterImpl.hpp:71:12:static T ArduinoJson::V721HB22::Converter<T, typename ArduinoJson::V721HB22::detail::enable_if<((ArduinoJson::V721HB22::detail::is_integral<T>::value && (! ArduinoJson::V721HB22::detail::is_same<bool, T>::value)) && (! ArduinoJson::V721HB22::detail::is_same<char, T>::value)), void>::type>::fromJson(ArduinoJson::V721HB22::JsonVariantConst) [with T = int]	2
../Core/Inc/Json/Memory/MemoryPool.hpp:65:11:ArduinoJson::V721HB22::detail::Slot<T> ArduinoJson::V721HB22::detail::MemoryPool<T>::allocSlot() [with T = ArduinoJson::V721HB22::detail::ResourceManager::SlotData]	3
../Core/Inc/Json/Memory/MemoryPoolList.hpp:180:8:bool ArduinoJson::V721HB22::detail::MemoryPoolList<T>::increaseCapacity(ArduinoJson::V721HB22::Allocator*) [with T = ArduinoJson::V721HB22::detail::ResourceManager::SlotData]	5
../Core/Inc/Json/Memory/MemoryPool.hpp:50:8:void ArduinoJson::V721HB22::detail::MemoryPool<T>::create(ArduinoJson::V721HB22::detail::SlotCount, ArduinoJson::V721HB22::Allocator*) [with T = ArduinoJson::V721HB22::detail::ResourceManager::SlotData]	2
../Core/Inc/Json/Polyfills/pgmspace_generic.hpp:57:12:ArduinoJson::V721HB22::detail::pgm_ptr<T>::pgm_ptr(const T*) [with T = double]	1
../Core/Inc/Json/Polyfills/pgmspace_generic.hpp:48:10:T ArduinoJson::V721HB22::detail::pgm_read(const T*) [with T = double]	1
../Core/Inc/Json/Memory/ResourceManager.hpp:72:15:ArduinoJson::V721HB22::detail::StringNode* ArduinoJson::V721HB22::detail::ResourceManager::saveString(TAdaptedString) [with TAdaptedString = ArduinoJson::V721HB22::detail::StaticStringAdapter]	3
../Core/Inc/Json/Polyfills/alias_cast.hpp:24:3:T ArduinoJson::V721HB22::detail::alias_cast(F) [with T = double; F = long long unsigned int]	1
../Core/Inc/Json/Polyfills/pgmspace_generic.hpp:57:12:ArduinoJson::V721HB22::detail::pgm_ptr<T>::pgm_ptr(const T*) [with T = float]	1
../Core/Inc/Json/Polyfills/pgmspace_generic.hpp:48:10:T ArduinoJson::V721HB22::detail::pgm_read(const T*) [with T = float]	1
../Core/Inc/Json/Variant/VariantRefBase.hpp:297:8:bool ArduinoJson::V721HB22::detail::VariantRefBase<TDerived>::doSet(T&&) const [with TConverter = ArduinoJson::V721HB22::Converter<int, void>; T = const int&; TDerived = ArduinoJson::V721HB22::detail::MemberProxy<ArduinoJson::V721HB22::JsonDocument&, const char*>]	1
../Core/Inc/Json/Variant/VariantData.hpp:218:5:T ArduinoJson::V721HB22::detail::VariantData::asIntegral(const ArduinoJson::V721HB22::detail::ResourceManager*) const [with T = int]	10
../Core/Inc/Json/Memory/StringPool.hpp:45:15:ArduinoJson::V721HB22::detail::StringNode* ArduinoJson::V721HB22::detail::StringPool::add(TAdaptedString, ArduinoJson::V721HB22::Allocator*) [with TAdaptedString = ArduinoJson::V721HB22::detail::StaticStringAdapter]	4
../Core/Inc/Json/Polyfills/utility.hpp:14:5:T&& ArduinoJson::V721HB22::detail::forward(remove_reference_t<T>&) [with T = const int&]	1
../Core/Inc/Json/Variant/VariantRefBaseImpl.hpp:149:13:bool ArduinoJson::V721HB22::detail::VariantRefBase<TDerived>::doSet(T&&, ArduinoJson::V721HB22::detail::true_type) const [with TConverter = ArduinoJson::V721HB22::Converter<int, void>; T = const int&; TDerived = ArduinoJson::V721HB22::detail::MemberProxy<ArduinoJson::V721HB22::JsonDocument&, const char*>]	1
../Core/Inc/Json/Variant/VariantRefBase.hpp:270:16:ArduinoJson::V721HB22::detail::VariantData* ArduinoJson::V721HB22::detail::VariantRefBase<TDerived>::getData() const [with TDerived = ArduinoJson::V721HB22::detail::MemberProxy<ArduinoJson::V721HB22::JsonDocument&, const char*>]	1
../Core/Inc/Json/Variant/VariantRefBase.hpp:266:20:ArduinoJson::V721HB22::detail::ResourceManager* ArduinoJson::V721HB22::detail::VariantRefBase<TDerived>::getResourceManager() const [with TDerived = ArduinoJson::V721HB22::detail::MemberProxy<ArduinoJson::V721HB22::JsonDocument&, const char*>]	1
../Core/Inc/Json/Numbers/convertNumber.hpp:135:6:TOut ArduinoJson::V721HB22::detail::convertNumber(TIn) [with TOut = int; TIn = long unsigned int]	2
../Core/Inc/Json/Numbers/convertNumber.hpp:135:6:TOut ArduinoJson::V721HB22::detail::convertNumber(TIn) [with TOut = int; TIn = long int]	2
../Core/Inc/Json/Numbers/convertNumber.hpp:135:6:TOut ArduinoJson::V721HB22::detail::convertNumber(TIn) [with TOut = int; TIn = long long unsigned int]	2
../Core/Inc/Json/Numbers/convertNumber.hpp:135:6:TOut ArduinoJson::V721HB22::detail::convertNumber(TIn) [with TOut = int; TIn = long long int]	2
../Core/Inc/Json/Numbers/parseNumber.hpp:234:10:T ArduinoJson::V721HB22::detail::parseNumber(const char*) [with T = int]	1
../Core/Inc/Json/Numbers/convertNumber.hpp:135:6:TOut ArduinoJson::V721HB22::detail::convertNumber(TIn) [with TOut = int; TIn = float]	2
../Core/Inc/Json/Numbers/convertNumber.hpp:135:6:TOut ArduinoJson::V721HB22::detail::convertNumber(TIn) [with TOut = int; TIn = double]	2
../Core/Inc/Json/Memory/StringPool.hpp:73:15:ArduinoJson::V721HB22::detail::StringNode* ArduinoJson::V721HB22::detail::StringPool::get(const TAdaptedString&) const [with TAdaptedString = ArduinoJson::V721HB22::detail::StaticStringAdapter]	3
../Core/Inc/Json/Strings/StringAdapters.hpp:66:13:void ArduinoJson::V721HB22::detail::stringGetChars(TAdaptedString, char*, size_t) [with TAdaptedString = StaticStringAdapter]	2
../Core/Inc/Json/Strings/StringAdapters.hpp:66:13:void ArduinoJson::V721HB22::detail::stringGetChars(TAdaptedString, char*, size_t) [with TAdaptedString = JsonStringAdapter]	2
../Core/Inc/Json/Variant/VariantRefBaseImpl.hpp:107:20:ArduinoJson::V721HB22::JsonVariant ArduinoJson::V721HB22::detail::VariantRefBase<TDerived>::getOrCreateVariant() const [with TDerived = ArduinoJson::V721HB22::detail::MemberProxy<ArduinoJson::V721HB22::JsonDocument&, const char*>]	1
../Core/Inc/Json/Variant/ConverterImpl.hpp:61:15:static bool ArduinoJson::V721HB22::Converter<T, typename ArduinoJson::V721HB22::detail::enable_if<((ArduinoJson::V721HB22::detail::is_integral<T>::value && (! ArduinoJson::V721HB22::detail::is_same<bool, T>::value)) && (! ArduinoJson::V721HB22::detail::is_same<char, T>::value)), void>::type>::toJson(T, ArduinoJson::V721HB22::JsonVariant) [with T = int]	2
../Core/Inc/Json/Variant/VariantRefBase.hpp:262:19:const TDerived& ArduinoJson::V721HB22::detail::VariantRefBase<TDerived>::derived() const [with TDerived = ArduinoJson::V721HB22::detail::MemberProxy<ArduinoJson::V721HB22::JsonDocument&, const char*>]	1
../Core/Inc/Json/Variant/VariantAttorney.hpp:25:15:getData()) ArduinoJson::V721HB22::detail::VariantAttorney::getData(TClient&) [with TClient = const ArduinoJson::V721HB22::detail::MemberProxy<ArduinoJson::V721HB22::JsonDocument&, const char*>]	1
../Core/Inc/Json/Variant/VariantAttorney.hpp:19:15:getResourceManager()) ArduinoJson::V721HB22::detail::VariantAttorney::getResourceManager(TClient&) [with TClient = const ArduinoJson::V721HB22::detail::MemberProxy<ArduinoJson::V721HB22::JsonDocument&, const char*>]	1
../Core/Inc/Json/Numbers/convertNumber.hpp:28:1:ArduinoJson::V721HB22::detail::enable_if_t<(((ArduinoJson::V721HB22::detail::is_integral<TIn>::value && ArduinoJson::V721HB22::detail::is_unsigned<TIn>::value) && ArduinoJson::V721HB22::detail::is_integral<T>::value) && (sizeof (TOut) <= sizeof (TIn))), bool> ArduinoJson::V721HB22::detail::canConvertNumber(TIn) [with TOut = int; TIn = long unsigned int]	1
../Core/Inc/Json/Numbers/convertNumber.hpp:67:1:ArduinoJson::V721HB22::detail::enable_if_t<((((ArduinoJson::V721HB22::detail::is_integral<TIn>::value && ArduinoJson::V721HB22::detail::is_signed<TIn>::value) && ArduinoJson::V721HB22::detail::is_integral<T>::value) && ArduinoJson::V721HB22::detail::is_signed<T>::value) && (sizeof (TIn) <= sizeof (TOut))), bool> ArduinoJson::V721HB22::detail::canConvertNumber(TIn) [with TOut = int; TIn = long int]	1
../Core/Inc/Json/Numbers/convertNumber.hpp:28:1:ArduinoJson::V721HB22::detail::enable_if_t<(((ArduinoJson::V721HB22::detail::is_integral<TIn>::value && ArduinoJson::V721HB22::detail::is_unsigned<TIn>::value) && ArduinoJson::V721HB22::detail::is_integral<T>::value) && (sizeof (TOut) <= sizeof (TIn))), bool> ArduinoJson::V721HB22::detail::canConvertNumber(TIn) [with TOut = int; TIn = long long unsigned int]	1
../Core/Inc/Json/Numbers/convertNumber.hpp:55:1:ArduinoJson::V721HB22::detail::enable_if_t<((((ArduinoJson::V721HB22::detail::is_integral<TIn>::value && ArduinoJson::V721HB22::detail::is_signed<TIn>::value) && ArduinoJson::V721HB22::detail::is_integral<T>::value) && ArduinoJson::V721HB22::detail::is_signed<T>::value) && (sizeof (TOut) < sizeof (TIn))), bool> ArduinoJson::V721HB22::detail::canConvertNumber(TIn) [with TOut = int; TIn = long long int]	3
../Core/Inc/Json/Numbers/parseNumber.hpp:61:5:T ArduinoJson::V721HB22::detail::Number::convertTo() const [with T = int]	5
../Core/Inc/Json/Polyfills/limits.hpp:33:22:static constexpr T ArduinoJson::V721HB22::detail::numeric_limits<T, typename ArduinoJson::V721HB22::detail::enable_if<(ArduinoJson::V721HB22::detail::is_integral<T>::value && ArduinoJson::V721HB22::detail::is_signed<T>::value), void>::type>::lowest() [with T = int]	1
../Core/Inc/Json/Numbers/convertNumber.hpp:117:1:ArduinoJson::V721HB22::detail::enable_if_t<((ArduinoJson::V721HB22::detail::is_floating_point<TIn>::value && ArduinoJson::V721HB22::detail::is_integral<T>::value) && (sizeof (TOut) >= sizeof (TIn))), bool> ArduinoJson::V721HB22::detail::canConvertNumber(TIn) [with TOut = int; TIn = float]	3
../Core/Inc/Json/Polyfills/limits.hpp:36:22:static constexpr T ArduinoJson::V721HB22::detail::numeric_limits<T, typename ArduinoJson::V721HB22::detail::enable_if<(ArduinoJson::V721HB22::detail::is_integral<T>::value && ArduinoJson::V721HB22::detail::is_signed<T>::value), void>::type>::highest() [with T = int]	1
../Core/Inc/Json/Numbers/convertNumber.hpp:102:1:ArduinoJson::V721HB22::detail::enable_if_t<((ArduinoJson::V721HB22::detail::is_floating_point<TIn>::value && ArduinoJson::V721HB22::detail::is_integral<T>::value) && (sizeof (TOut) < sizeof (TIn))), bool> ArduinoJson::V721HB22::detail::canConvertNumber(TIn) [with TOut = int; TIn = double]	3
../Core/Inc/Json/Strings/StringAdapters.hpp:61:1:ArduinoJson::V721HB22::detail::enable_if_t<(TAdaptedString1::typeSortKey > TAdaptedString2::typeSortKey), bool> ArduinoJson::V721HB22::detail::stringEquals(TAdaptedString1, TAdaptedString2) [with TAdaptedString1 = StaticStringAdapter; TAdaptedString2 = SizedRamString]	1
../Core/Inc/Json/Variant/VariantRefBase.hpp:274:16:ArduinoJson::V721HB22::detail::VariantData* ArduinoJson::V721HB22::detail::VariantRefBase<TDerived>::getOrCreateData() const [with TDerived = ArduinoJson::V721HB22::detail::MemberProxy<ArduinoJson::V721HB22::JsonDocument&, const char*>]	1
../Core/Inc/Json/Variant/VariantImpl.hpp:96:40:ArduinoJson::V721HB22::detail::enable_if_t<ArduinoJson::V721HB22::detail::is_signed<T>::value, bool> ArduinoJson::V721HB22::detail::VariantData::setInteger(T, ArduinoJson::V721HB22::detail::ResourceManager*) [with T = int]	3
../Core/Inc/Json/Object/MemberProxy.hpp:48:16:ArduinoJson::V721HB22::detail::VariantData* ArduinoJson::V721HB22::detail::MemberProxy< <template-parameter-1-1>, <template-parameter-1-2> >::getData() const [with TUpstream = ArduinoJson::V721HB22::JsonDocument&; TStringRef = const char*]	1
../Core/Inc/Json/Object/MemberProxy.hpp:44:20:ArduinoJson::V721HB22::detail::ResourceManager* ArduinoJson::V721HB22::detail::MemberProxy< <template-parameter-1-1>, <template-parameter-1-2> >::getResourceManager() const [with TUpstream = ArduinoJson::V721HB22::JsonDocument&; TStringRef = const char*]	1
../Core/Inc/Json/Numbers/FloatTraits.hpp:159:12:static T ArduinoJson::V721HB22::detail::FloatTraits<T, 4>::highest_for(ArduinoJson::V721HB22::detail::enable_if_t<((ArduinoJson::V721HB22::detail::is_integral<TOut>::value && ArduinoJson::V721HB22::detail::is_signed<TOut>::value) && (sizeof (TOut) == 4)), int>*) [with TOut = int; T = float]	1
../Core/Inc/Json/Strings/StringAdapters.hpp:45:1:ArduinoJson::V721HB22::detail::enable_if_t<(TAdaptedString1::typeSortKey <= TAdaptedString2::typeSortKey), bool> ArduinoJson::V721HB22::detail::stringEquals(TAdaptedString1, TAdaptedString2) [with TAdaptedString1 = SizedRamString; TAdaptedString2 = StaticStringAdapter]	5
../Core/Inc/Json/Numbers/FloatTraits.hpp:142:12:static T ArduinoJson::V721HB22::detail::FloatTraits<T, 4>::forge(uint32_t) [with T = float]	1
../Core/Inc/Json/Variant/VariantAttorney.hpp:30:23:static ArduinoJson::V721HB22::detail::VariantData* ArduinoJson::V721HB22::detail::VariantAttorney::getOrCreateData(TClient&) [with TClient = const ArduinoJson::V721HB22::detail::MemberProxy<ArduinoJson::V721HB22::JsonDocument&, const char*>]	1
../Core/Inc/Json/Numbers/convertNumber.hpp:67:1:ArduinoJson::V721HB22::detail::enable_if_t<((((ArduinoJson::V721HB22::detail::is_integral<TIn>::value && ArduinoJson::V721HB22::detail::is_signed<TIn>::value) && ArduinoJson::V721HB22::detail::is_integral<T>::value) && ArduinoJson::V721HB22::detail::is_signed<T>::value) && (sizeof (TIn) <= sizeof (TOut))), bool> ArduinoJson::V721HB22::detail::canConvertNumber(TIn) [with TOut = long int; TIn = int]	1
../Core/Inc/Json/Memory/MemoryPool.hpp:25:12:ArduinoJson::V721HB22::detail::Slot<T>::operator bool() const [with T = ArduinoJson::V721HB22::detail::VariantExtension]	1
../Core/Inc/Json/Memory/MemoryPool.hpp:29:10:ArduinoJson::V721HB22::detail::SlotId ArduinoJson::V721HB22::detail::Slot<T>::id() const [with T = ArduinoJson::V721HB22::detail::VariantExtension]	1
../Core/Inc/Json/Memory/MemoryPool.hpp:37:6:T* ArduinoJson::V721HB22::detail::Slot<T>::operator->() const [with T = ArduinoJson::V721HB22::detail::VariantExtension]	1
../Core/Inc/Json/Variant/VariantAttorney.hpp:25:15:getData()) ArduinoJson::V721HB22::detail::VariantAttorney::getData(TClient&) [with TClient = ArduinoJson::V721HB22::JsonDocument]	1
../Core/Inc/Json/Variant/VariantAttorney.hpp:19:15:getResourceManager()) ArduinoJson::V721HB22::detail::VariantAttorney::getResourceManager(TClient&) [with TClient = ArduinoJson::V721HB22::JsonDocument]	1
../Core/Inc/Json/Variant/VariantData.hpp:304:23:static ArduinoJson::V721HB22::detail::VariantData* ArduinoJson::V721HB22::detail::VariantData::getMember(const ArduinoJson::V721HB22::detail::VariantData*, TAdaptedString, const ArduinoJson::V721HB22::detail::ResourceManager*) [with TAdaptedString = ArduinoJson::V721HB22::detail::StaticStringAdapter]	2
../Core/Inc/Json/Polyfills/alias_cast.hpp:24:3:T ArduinoJson::V721HB22::detail::alias_cast(F) [with T = float; F = long unsigned int]	1
../Core/Inc/Json/Object/MemberProxy.hpp:54:16:ArduinoJson::V721HB22::detail::VariantData* ArduinoJson::V721HB22::detail::MemberProxy< <template-parameter-1-1>, <template-parameter-1-2> >::getOrCreateData() const [with TUpstream = ArduinoJson::V721HB22::JsonDocument&; TStringRef = const char*]	2
../Core/Inc/Json/Variant/VariantData.hpp:298:16:ArduinoJson::V721HB22::detail::VariantData* ArduinoJson::V721HB22::detail::VariantData::getMember(TAdaptedString, const ArduinoJson::V721HB22::detail::ResourceManager*) const [with TAdaptedString = ArduinoJson::V721HB22::detail::StaticStringAdapter]	1
../Core/Inc/Json/Variant/VariantAttorney.hpp:30:23:static ArduinoJson::V721HB22::detail::VariantData* ArduinoJson::V721HB22::detail::VariantAttorney::getOrCreateData(TClient&) [with TClient = ArduinoJson::V721HB22::JsonDocument]	1
../Core/Inc/Json/Variant/VariantData.hpp:319:16:ArduinoJson::V721HB22::detail::VariantData* ArduinoJson::V721HB22::detail::VariantData::getOrAddMember(TAdaptedString, ArduinoJson::V721HB22::detail::ResourceManager*) [with TAdaptedString = ArduinoJson::V721HB22::detail::StaticStringAdapter]	4
../Core/Inc/Json/Object/ObjectData.hpp:24:23:static ArduinoJson::V721HB22::detail::VariantData* ArduinoJson::V721HB22::detail::ObjectData::getMember(const ArduinoJson::V721HB22::detail::ObjectData*, TAdaptedString, const ArduinoJson::V721HB22::detail::ResourceManager*) [with TAdaptedString = ArduinoJson::V721HB22::detail::StaticStringAdapter]	2
../Core/Inc/Json/Object/ObjectImpl.hpp:24:14:ArduinoJson::V721HB22::detail::VariantData* ArduinoJson::V721HB22::detail::ObjectData::getOrAddMember(TAdaptedString, ArduinoJson::V721HB22::detail::ResourceManager*) [with TAdaptedString = ArduinoJson::V721HB22::detail::StaticStringAdapter]	2
../Core/Inc/Json/Object/ObjectImpl.hpp:14:21:ArduinoJson::V721HB22::detail::VariantData* ArduinoJson::V721HB22::detail::ObjectData::getMember(TAdaptedString, const ArduinoJson::V721HB22::detail::ResourceManager*) const [with TAdaptedString = ArduinoJson::V721HB22::detail::StaticStringAdapter]	2
../Core/Inc/Json/Object/ObjectImpl.hpp:53:21:ArduinoJson::V721HB22::detail::VariantData* ArduinoJson::V721HB22::detail::ObjectData::addMember(TAdaptedString, ArduinoJson::V721HB22::detail::ResourceManager*) [with TAdaptedString = ArduinoJson::V721HB22::detail::StaticStringAdapter]	4
../Core/Inc/Json/Object/ObjectImpl.hpp:33:29:ArduinoJson::V721HB22::detail::CollectionData::iterator ArduinoJson::V721HB22::detail::ObjectData::findKey(TAdaptedString, const ArduinoJson::V721HB22::detail::ResourceManager*) const [with TAdaptedString = ArduinoJson::V721HB22::detail::StaticStringAdapter]	6
../Core/Inc/Json/Strings/StringAdapters.hpp:61:1:ArduinoJson::V721HB22::detail::enable_if_t<(TAdaptedString1::typeSortKey > TAdaptedString2::typeSortKey), bool> ArduinoJson::V721HB22::detail::stringEquals(TAdaptedString1, TAdaptedString2) [with TAdaptedString1 = StaticStringAdapter; TAdaptedString2 = JsonStringAdapter]	1
../Core/Inc/Json/Strings/StringAdapters.hpp:66:13:void ArduinoJson::V721HB22::detail::stringGetChars(TAdaptedString, char*, size_t) [with TAdaptedString = SizedRamString]	2
../Core/Inc/Json/Strings/StringAdapters.hpp:45:1:ArduinoJson::V721HB22::detail::enable_if_t<(TAdaptedString1::typeSortKey <= TAdaptedString2::typeSortKey), bool> ArduinoJson::V721HB22::detail::stringEquals(TAdaptedString1, TAdaptedString2) [with TAdaptedString1 = JsonStringAdapter; TAdaptedString2 = StaticStringAdapter]	5
../Core/Src/main.cpp:331:1:void __static_initialization_and_destruction_0(int, int)	5
../Core/Src/main.cpp:331:1:cpp)	1
../Core/Src/main.cpp:331:1:cpp)	1
